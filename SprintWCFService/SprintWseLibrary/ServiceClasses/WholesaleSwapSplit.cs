//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4952
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.4952.
// 
#pragma warning disable 1591

namespace SprintWseLibrary.com.sprint.WholesaleSwapSplit
{
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;



    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "WholesaleSwapSplitBinding", Namespace = "http://integration.sprint.com/eai/services/WholesaleSwapSplit/v1/WholesaleSwapSpl" +
        "it.wsdl")]
    public partial class WholesaleSwapSplit : Microsoft.Web.Services3.WebServicesClientProtocol
    {

        private WsMessageHeaderType wsMessageHeaderField;

        private System.Threading.SendOrPostCallback SplitNpaMdnOperationCompleted;

        private System.Threading.SendOrPostCallback SwapEsnOperationCompleted;

        private System.Threading.SendOrPostCallback SwapMdnOperationCompleted;

        private System.Threading.SendOrPostCallback SwapMdnWithReserveIdOperationCompleted;

        private System.Threading.SendOrPostCallback SwapMsidOperationCompleted;

        private bool useDefaultCredentialsSetExplicitly;

        /// <remarks/>
        public WholesaleSwapSplit()
        {
            this.Url = global::SprintWseLibrary.Properties.Settings.Default.PingTestClient_com_sprint_WholesaleSwapSplit_WholesaleSwapSplit;
            if ((this.IsLocalFileSystemWebService(this.Url) == true))
            {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else
            {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }

        public WsMessageHeaderType wsMessageHeader
        {
            get
            {
                return this.wsMessageHeaderField;
            }
            set
            {
                this.wsMessageHeaderField = value;
            }
        }

        public new string Url
        {
            get
            {
                return base.Url;
            }
            set
            {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true)
                            && (this.useDefaultCredentialsSetExplicitly == false))
                            && (this.IsLocalFileSystemWebService(value) == false)))
                {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }

        public new bool UseDefaultCredentials
        {
            get
            {
                return base.UseDefaultCredentials;
            }
            set
            {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }

        /// <remarks/>
        public event SplitNpaMdnCompletedEventHandler SplitNpaMdnCompleted;

        /// <remarks/>
        public event SwapEsnCompletedEventHandler SwapEsnCompleted;

        /// <remarks/>
        public event SwapMdnCompletedEventHandler SwapMdnCompleted;

        /// <remarks/>
        public event SwapMdnWithReserveIdCompletedEventHandler SwapMdnWithReserveIdCompleted;

        /// <remarks/>
        public event SwapMsidCompletedEventHandler SwapMsidCompleted;

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("wsMessageHeader", Direction = System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("splitNpaMdn", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("splitNpaMdnResponse", Namespace = "http://integration.sprint.com/interfaces/WholesaleSwapSplit/v1/SwapSplitEnvelope." +
            "xsd")]
        public SplitNpaMdnReply SplitNpaMdn([System.Xml.Serialization.XmlElementAttribute("splitNpaMdn", Namespace = "http://integration.sprint.com/interfaces/WholesaleSwapSplit/v1/SwapSplitEnvelope." +
            "xsd")] SplitNpaMdnRequest splitNpaMdn1)
        {
            object[] results = this.Invoke("SplitNpaMdn", new object[] {
                        splitNpaMdn1});
            return ((SplitNpaMdnReply)(results[0]));
        }

        /// <remarks/>
        public void SplitNpaMdnAsync(SplitNpaMdnRequest splitNpaMdn1)
        {
            this.SplitNpaMdnAsync(splitNpaMdn1, null);
        }

        /// <remarks/>
        public void SplitNpaMdnAsync(SplitNpaMdnRequest splitNpaMdn1, object userState)
        {
            if ((this.SplitNpaMdnOperationCompleted == null))
            {
                this.SplitNpaMdnOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSplitNpaMdnOperationCompleted);
            }
            this.InvokeAsync("SplitNpaMdn", new object[] {
                        splitNpaMdn1}, this.SplitNpaMdnOperationCompleted, userState);
        }

        private void OnSplitNpaMdnOperationCompleted(object arg)
        {
            if ((this.SplitNpaMdnCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SplitNpaMdnCompleted(this, new SplitNpaMdnCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("wsMessageHeader", Direction = System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("swapEsn", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("swapEsnResponse", Namespace = "http://integration.sprint.com/interfaces/WholesaleSwapSplit/v1/SwapSplitEnvelope." +
            "xsd")]
        public SwapEsnReply SwapEsn([System.Xml.Serialization.XmlElementAttribute("swapEsn", Namespace = "http://integration.sprint.com/interfaces/WholesaleSwapSplit/v1/SwapSplitEnvelope." +
            "xsd")] SwapEsnRequest swapEsn1)
        {
            object[] results = this.Invoke("SwapEsn", new object[] {
                        swapEsn1});
            return ((SwapEsnReply)(results[0]));
        }

        /// <remarks/>
        public void SwapEsnAsync(SwapEsnRequest swapEsn1)
        {
            this.SwapEsnAsync(swapEsn1, null);
        }

        /// <remarks/>
        public void SwapEsnAsync(SwapEsnRequest swapEsn1, object userState)
        {
            if ((this.SwapEsnOperationCompleted == null))
            {
                this.SwapEsnOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSwapEsnOperationCompleted);
            }
            this.InvokeAsync("SwapEsn", new object[] {
                        swapEsn1}, this.SwapEsnOperationCompleted, userState);
        }

        private void OnSwapEsnOperationCompleted(object arg)
        {
            if ((this.SwapEsnCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SwapEsnCompleted(this, new SwapEsnCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("wsMessageHeader", Direction = System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("swapMdn", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("swapMdnResponse", Namespace = "http://integration.sprint.com/interfaces/WholesaleSwapSplit/v1/SwapSplitEnvelope." +
            "xsd")]
        public SwapMdnReply SwapMdn([System.Xml.Serialization.XmlElementAttribute("swapMdn", Namespace = "http://integration.sprint.com/interfaces/WholesaleSwapSplit/v1/SwapSplitEnvelope." +
            "xsd")] SwapMdnRequest swapMdn1)
        {
            object[] results = this.Invoke("SwapMdn", new object[] {
                        swapMdn1});
            return ((SwapMdnReply)(results[0]));
        }

        /// <remarks/>
        public void SwapMdnAsync(SwapMdnRequest swapMdn1)
        {
            this.SwapMdnAsync(swapMdn1, null);
        }

        /// <remarks/>
        public void SwapMdnAsync(SwapMdnRequest swapMdn1, object userState)
        {
            if ((this.SwapMdnOperationCompleted == null))
            {
                this.SwapMdnOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSwapMdnOperationCompleted);
            }
            this.InvokeAsync("SwapMdn", new object[] {
                        swapMdn1}, this.SwapMdnOperationCompleted, userState);
        }

        private void OnSwapMdnOperationCompleted(object arg)
        {
            if ((this.SwapMdnCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SwapMdnCompleted(this, new SwapMdnCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("wsMessageHeader", Direction = System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("swapMdnWithReserveId", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("swapMdnWithReserveIdResponse", Namespace = "http://integration.sprint.com/interfaces/WholesaleSwapSplit/v1/SwapSplitEnvelope." +
            "xsd")]
        public SwapMdnWithReserveIdReply SwapMdnWithReserveId([System.Xml.Serialization.XmlElementAttribute("swapMdnWithReserveId", Namespace = "http://integration.sprint.com/interfaces/WholesaleSwapSplit/v1/SwapSplitEnvelope." +
            "xsd")] SwapMdnWithReserveIdRequest swapMdnWithReserveId1)
        {
            object[] results = this.Invoke("SwapMdnWithReserveId", new object[] {
                        swapMdnWithReserveId1});
            return ((SwapMdnWithReserveIdReply)(results[0]));
        }

        /// <remarks/>
        public void SwapMdnWithReserveIdAsync(SwapMdnWithReserveIdRequest swapMdnWithReserveId1)
        {
            this.SwapMdnWithReserveIdAsync(swapMdnWithReserveId1, null);
        }

        /// <remarks/>
        public void SwapMdnWithReserveIdAsync(SwapMdnWithReserveIdRequest swapMdnWithReserveId1, object userState)
        {
            if ((this.SwapMdnWithReserveIdOperationCompleted == null))
            {
                this.SwapMdnWithReserveIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSwapMdnWithReserveIdOperationCompleted);
            }
            this.InvokeAsync("SwapMdnWithReserveId", new object[] {
                        swapMdnWithReserveId1}, this.SwapMdnWithReserveIdOperationCompleted, userState);
        }

        private void OnSwapMdnWithReserveIdOperationCompleted(object arg)
        {
            if ((this.SwapMdnWithReserveIdCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SwapMdnWithReserveIdCompleted(this, new SwapMdnWithReserveIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("wsMessageHeader", Direction = System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("swapMsid", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("swapMsidResponse", Namespace = "http://integration.sprint.com/interfaces/WholesaleSwapSplit/v1/SwapSplitEnvelope." +
            "xsd")]
        public SwapMsidReply SwapMsid([System.Xml.Serialization.XmlElementAttribute("swapMsid", Namespace = "http://integration.sprint.com/interfaces/WholesaleSwapSplit/v1/SwapSplitEnvelope." +
            "xsd")] SwapMsidRequest swapMsid1)
        {
            object[] results = this.Invoke("SwapMsid", new object[] {
                        swapMsid1});
            return ((SwapMsidReply)(results[0]));
        }

        /// <remarks/>
        public void SwapMsidAsync(SwapMsidRequest swapMsid1)
        {
            this.SwapMsidAsync(swapMsid1, null);
        }

        /// <remarks/>
        public void SwapMsidAsync(SwapMsidRequest swapMsid1, object userState)
        {
            if ((this.SwapMsidOperationCompleted == null))
            {
                this.SwapMsidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSwapMsidOperationCompleted);
            }
            this.InvokeAsync("SwapMsid", new object[] {
                        swapMsid1}, this.SwapMsidOperationCompleted, userState);
        }

        private void OnSwapMsidOperationCompleted(object arg)
        {
            if ((this.SwapMsidCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SwapMsidCompleted(this, new SwapMsidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }

        private bool IsLocalFileSystemWebService(string url)
        {
            if (((url == null)
                        || (url == string.Empty)))
            {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024)
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0)))
            {
                return true;
            }
            return false;
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://integration.sprint.com/common/header/WSMessageHeader/v2")]
    [System.Xml.Serialization.XmlRootAttribute("wsMessageHeader", Namespace = "http://integration.sprint.com/common/header/WSMessageHeader/v2", IsNullable = false)]
    public partial class WsMessageHeaderType : System.Web.Services.Protocols.SoapHeader
    {

        private TrackingMessageHeaderType trackingMessageHeaderField;

        private SecurityMessageHeaderType securityMessageHeaderField;

        private System.Xml.XmlAttribute[] anyAttrField;

        /// <remarks/>
        public TrackingMessageHeaderType trackingMessageHeader
        {
            get
            {
                return this.trackingMessageHeaderField;
            }
            set
            {
                this.trackingMessageHeaderField = value;
            }
        }

        /// <remarks/>
        public SecurityMessageHeaderType securityMessageHeader
        {
            get
            {
                return this.securityMessageHeaderField;
            }
            set
            {
                this.securityMessageHeaderField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr
        {
            get
            {
                return this.anyAttrField;
            }
            set
            {
                this.anyAttrField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://integration.sprint.com/common/header/WSMessageHeader/v2")]
    public partial class TrackingMessageHeaderType
    {

        private string applicationIdField;

        private string applicationUserIdField;

        private string consumerIdField;

        private string messageIdField;

        private string conversationIdField;

        private string timeToLiveField;

        private long replyCompletionCodeField;

        private bool replyCompletionCodeFieldSpecified;

        private System.DateTime messageDateTimeStampField;

        /// <remarks/>
        public string applicationId
        {
            get
            {
                return this.applicationIdField;
            }
            set
            {
                this.applicationIdField = value;
            }
        }

        /// <remarks/>
        public string applicationUserId
        {
            get
            {
                return this.applicationUserIdField;
            }
            set
            {
                this.applicationUserIdField = value;
            }
        }

        /// <remarks/>
        public string consumerId
        {
            get
            {
                return this.consumerIdField;
            }
            set
            {
                this.consumerIdField = value;
            }
        }

        /// <remarks/>
        public string messageId
        {
            get
            {
                return this.messageIdField;
            }
            set
            {
                this.messageIdField = value;
            }
        }

        /// <remarks/>
        public string conversationId
        {
            get
            {
                return this.conversationIdField;
            }
            set
            {
                this.conversationIdField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType = "integer")]
        public string timeToLive
        {
            get
            {
                return this.timeToLiveField;
            }
            set
            {
                this.timeToLiveField = value;
            }
        }

        /// <remarks/>
        public long replyCompletionCode
        {
            get
            {
                return this.replyCompletionCodeField;
            }
            set
            {
                this.replyCompletionCodeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool replyCompletionCodeSpecified
        {
            get
            {
                return this.replyCompletionCodeFieldSpecified;
            }
            set
            {
                this.replyCompletionCodeFieldSpecified = value;
            }
        }

        /// <remarks/>
        public System.DateTime messageDateTimeStamp
        {
            get
            {
                return this.messageDateTimeStampField;
            }
            set
            {
                this.messageDateTimeStampField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://integration.sprint.com/interfaces/WholesaleSwapSplit/v1/SwapSplitEnvelope." +
        "xsd")]
    public partial class SwapMsidReply
    {

        private string newMsidField;

        private string mdnField;

        /// <remarks/>
        public string newMsid
        {
            get
            {
                return this.newMsidField;
            }
            set
            {
                this.newMsidField = value;
            }
        }

        /// <remarks/>
        public string mdn
        {
            get
            {
                return this.mdnField;
            }
            set
            {
                this.mdnField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://integration.sprint.com/interfaces/WholesaleSwapSplit/v1/SwapSplitEnvelope." +
        "xsd")]
    public partial class SwapMsidRequest
    {

        private string oldMsidField;

        /// <remarks/>
        public string oldMsid
        {
            get
            {
                return this.oldMsidField;
            }
            set
            {
                this.oldMsidField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://integration.sprint.com/interfaces/WholesaleSwapSplit/v1/SwapSplitEnvelope." +
        "xsd")]
    public partial class SwapMdnWithReserveIdReply
    {

        private string newMdnField;

        private string msidField;

        /// <remarks/>
        public string newMdn
        {
            get
            {
                return this.newMdnField;
            }
            set
            {
                this.newMdnField = value;
            }
        }

        /// <remarks/>
        public string msid
        {
            get
            {
                return this.msidField;
            }
            set
            {
                this.msidField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://integration.sprint.com/interfaces/WholesaleSwapSplit/v1/SwapSplitEnvelope." +
        "xsd")]
    public partial class SwapMdnWithReserveIdRequest
    {

        private string oldMdnField;

        private string reserveMdnIdField;

        /// <remarks/>
        public string oldMdn
        {
            get
            {
                return this.oldMdnField;
            }
            set
            {
                this.oldMdnField = value;
            }
        }

        /// <remarks/>
        public string reserveMdnId
        {
            get
            {
                return this.reserveMdnIdField;
            }
            set
            {
                this.reserveMdnIdField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://integration.sprint.com/interfaces/WholesaleSwapSplit/v1/SwapSplitEnvelope." +
        "xsd")]
    public partial class SwapMdnReply
    {

        private string newMdnField;

        private string msidField;

        /// <remarks/>
        public string newMdn
        {
            get
            {
                return this.newMdnField;
            }
            set
            {
                this.newMdnField = value;
            }
        }

        /// <remarks/>
        public string msid
        {
            get
            {
                return this.msidField;
            }
            set
            {
                this.msidField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://integration.sprint.com/interfaces/WholesaleSwapSplit/v1/SwapSplitEnvelope." +
        "xsd")]
    public partial class SwapMdnRequest
    {

        private string mdnField;

        /// <remarks/>
        public string mdn
        {
            get
            {
                return this.mdnField;
            }
            set
            {
                this.mdnField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://integration.sprint.com/interfaces/WholesaleSwapSplit/v1/SwapSplitEnvelope." +
        "xsd")]
    public partial class SwapEsnReply
    {

        private string msidField;

        /// <remarks/>
        public string msid
        {
            get
            {
                return this.msidField;
            }
            set
            {
                this.msidField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://integration.sprint.com/interfaces/WholesaleSwapSplit/v1/SwapSplitEnvelope." +
        "xsd")]
    public partial class MobileEquipmentIdentifier
    {

        private string itemField;

        private ItemChoiceType1 itemElementNameField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("mobileEquipmentIdentifierDec", typeof(string))]
        [System.Xml.Serialization.XmlElementAttribute("mobileEquipmentIdentifierHex", typeof(string))]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item
        {
            get
            {
                return this.itemField;
            }
            set
            {
                this.itemField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType1 ItemElementName
        {
            get
            {
                return this.itemElementNameField;
            }
            set
            {
                this.itemElementNameField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://integration.sprint.com/interfaces/WholesaleSwapSplit/v1/SwapSplitEnvelope." +
        "xsd", IncludeInSchema = false)]
    public enum ItemChoiceType1
    {

        /// <remarks/>
        mobileEquipmentIdentifierDec,

        /// <remarks/>
        mobileEquipmentIdentifierHex,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://integration.sprint.com/interfaces/WholesaleSwapSplit/v1/SwapSplitEnvelope." +
        "xsd")]
    public partial class ElectronicSerialNumber
    {

        private string itemField;

        private ItemChoiceType itemElementNameField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("electronicSerialNumberDec", typeof(string))]
        [System.Xml.Serialization.XmlElementAttribute("electronicSerialNumberHex", typeof(string))]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item
        {
            get
            {
                return this.itemField;
            }
            set
            {
                this.itemField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType ItemElementName
        {
            get
            {
                return this.itemElementNameField;
            }
            set
            {
                this.itemElementNameField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://integration.sprint.com/interfaces/WholesaleSwapSplit/v1/SwapSplitEnvelope." +
        "xsd", IncludeInSchema = false)]
    public enum ItemChoiceType
    {

        /// <remarks/>
        electronicSerialNumberDec,

        /// <remarks/>
        electronicSerialNumberHex,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://integration.sprint.com/interfaces/WholesaleSwapSplit/v1/SwapSplitEnvelope." +
        "xsd")]
    public partial class SerialNumber
    {

        private object itemField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("electronicSerialNumber", typeof(ElectronicSerialNumber))]
        [System.Xml.Serialization.XmlElementAttribute("mobileEquipmentIdentifier", typeof(MobileEquipmentIdentifier))]
        public object Item
        {
            get
            {
                return this.itemField;
            }
            set
            {
                this.itemField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://integration.sprint.com/interfaces/WholesaleSwapSplit/v1/SwapSplitEnvelope." +
        "xsd")]
    public partial class SwapEsnRequest
    {

        private string mdnField;

        private SerialNumber esnField;

        /// <remarks/>
        public string mdn
        {
            get
            {
                return this.mdnField;
            }
            set
            {
                this.mdnField = value;
            }
        }

        /// <remarks/>
        public SerialNumber esn
        {
            get
            {
                return this.esnField;
            }
            set
            {
                this.esnField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://integration.sprint.com/interfaces/WholesaleSwapSplit/v1/SwapSplitEnvelope." +
        "xsd")]
    public partial class SplitNpaMdnReply
    {

        private string newMdnField;

        private string msidField;

        /// <remarks/>
        public string newMdn
        {
            get
            {
                return this.newMdnField;
            }
            set
            {
                this.newMdnField = value;
            }
        }

        /// <remarks/>
        public string msid
        {
            get
            {
                return this.msidField;
            }
            set
            {
                this.msidField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://integration.sprint.com/interfaces/WholesaleSwapSplit/v1/SwapSplitEnvelope." +
        "xsd")]
    public partial class SplitNpaMdnRequest
    {

        private string oldMdnField;

        /// <remarks/>
        public string oldMdn
        {
            get
            {
                return this.oldMdnField;
            }
            set
            {
                this.oldMdnField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://integration.sprint.com/common/header/WSMessageHeader/v2")]
    public partial class BasicCredentialInfoType
    {

        private string idField;

        private string passwordField;

        /// <remarks/>
        public string id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }

        /// <remarks/>
        public string password
        {
            get
            {
                return this.passwordField;
            }
            set
            {
                this.passwordField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://integration.sprint.com/common/header/WSMessageHeader/v2")]
    public partial class SdcLoginCredentialsType
    {

        private string userIdField;

        private string passwordField;

        /// <remarks/>
        public string userId
        {
            get
            {
                return this.userIdField;
            }
            set
            {
                this.userIdField = value;
            }
        }

        /// <remarks/>
        public string password
        {
            get
            {
                return this.passwordField;
            }
            set
            {
                this.passwordField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://integration.sprint.com/common/header/WSMessageHeader/v2")]
    public partial class SecurityMessageHeaderType
    {

        private object itemField;

        private string corpIdField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("basicCredentialInfo", typeof(BasicCredentialInfoType))]
        [System.Xml.Serialization.XmlElementAttribute("pin", typeof(string))]
        [System.Xml.Serialization.XmlElementAttribute("sdcLoginCredentials", typeof(SdcLoginCredentialsType))]
        public object Item
        {
            get
            {
                return this.itemField;
            }
            set
            {
                this.itemField = value;
            }
        }

        /// <remarks/>
        public string corpId
        {
            get
            {
                return this.corpIdField;
            }
            set
            {
                this.corpIdField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SplitNpaMdnCompletedEventHandler(object sender, SplitNpaMdnCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SplitNpaMdnCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal SplitNpaMdnCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public SplitNpaMdnReply Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((SplitNpaMdnReply)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SwapEsnCompletedEventHandler(object sender, SwapEsnCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SwapEsnCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal SwapEsnCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public SwapEsnReply Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((SwapEsnReply)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SwapMdnCompletedEventHandler(object sender, SwapMdnCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SwapMdnCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal SwapMdnCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public SwapMdnReply Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((SwapMdnReply)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SwapMdnWithReserveIdCompletedEventHandler(object sender, SwapMdnWithReserveIdCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SwapMdnWithReserveIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal SwapMdnWithReserveIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public SwapMdnWithReserveIdReply Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((SwapMdnWithReserveIdReply)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SwapMsidCompletedEventHandler(object sender, SwapMsidCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SwapMsidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal SwapMsidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public SwapMsidReply Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((SwapMsidReply)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591